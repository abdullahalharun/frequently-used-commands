networks:
  app_network:
    driver: bridge

volumes:
  db_data:


services:
  backend:
    build:
      context: ./
      dockerfile: .docker/backend/Dockerfile
    container_name: laravel_backend # container name
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./laravel-backend:/var/www # volume
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - app_network
    command: php-fpm

  web:
    image: nginx:alpine
    container_name: laravel_web # backend container name
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - .docker/backend/nginx.conf:/etc/nginx/conf.d/default.conf # backend nginx config
    networks:
      - app_network
    depends_on:
      - backend

  frontend:
    build:
      context: ./
      dockerfile: .docker/frontend/Dockerfile
    container_name: next_frontend # frontend container name
    restart: unless-stopped
    working_dir: /usr/src/app
    volumes:
      - ./next-frontend:/usr/src/app # frontend volume
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
    command: npm run dev
    networks:
      - app_network

  db:
    image: mysql:8.0
    container_name: laravel_db # db container name
    restart: always
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - 8081:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - db
    networks:
      - app_network
